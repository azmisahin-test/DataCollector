version: '3.8'

services:
  kafka:
    image: apache/kafka:latest
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    ports:
      - "9092:9092"
      - "9093:9093"
    networks:
      - my_shared_network
    volumes:
      - ./data/kafka:/kafka/data

  kafdrop:
    image: obsidiandynamics/kafdrop
    ports:
      - "9000:9000"
    environment:
      KAFKA_SERVERS: "kafka:9092"
    networks:
      - my_shared_network
    depends_on:
      - kafka

  mysql:
    image: mysql:latest
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./databases/mysql/service/:/docker-entrypoint-initdb.d/
    networks:
      - my_shared_network
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "${MYSQL_USER}", "-p${MYSQL_PASSWORD}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  # Other database services here...

  data-collection-python:
    build:
      context: ./data-collection-python
      dockerfile: Dockerfile
    env_file:
      - .env
    networks:
      - my_shared_network
    depends_on:
      - mysql
      - mongo
      - postgresql
    command: >
      sh -c "while true; do python src/app.py; sleep ${SLEEP_DURATION}; done"

  data-collection-node:
    build:
      context: ./data-collection-node
      dockerfile: Dockerfile
    env_file:
      - .env
    networks:
      - my_shared_network
    depends_on:
      - mysql
      - mongo
      - kafka
    command: >
      sh -c "while true; do node src/api/app.js; echo 'Sleeping for ${SLEEP_DURATION} seconds...'; sleep ${SLEEP_DURATION}; echo 'Woke up!'; done"

networks:
  my_shared_network:
    external: true
